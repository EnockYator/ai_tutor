"""Updated tables

Revision ID: 86b695cb5e52
Revises: ca967a9be701
Create Date: 2025-04-27 10:41:42.326087+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '86b695cb5e52'
down_revision: Union[str, None] = 'ca967a9be701'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    op.drop_table('courses')
    op.drop_table('enrollments')
    op.drop_table('course_notes')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_notes',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('file_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('file_path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('content_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='course_notes_course_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='course_notes_pkey')
    )
    op.create_table('enrollments',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('enrolled_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('student_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('enrolled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], name='enrollments_course_id_fkey'),
    sa.ForeignKeyConstraint(['student_id'], ['users.id'], name='enrollments_student_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enrollments_pkey')
    )
    op.create_table('courses',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('course_title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_code', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('course_tutor', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('tutor_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['tutor_id'], ['users.id'], name='courses_tutor_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='courses_pkey')
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('student', 'tutor', name='user_roles'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key')
    )
    # ### end Alembic commands ###
